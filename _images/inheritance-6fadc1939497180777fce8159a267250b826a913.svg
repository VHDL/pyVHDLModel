<ns0:svg xmlns:ns0="http://www.w3.org/2000/svg" xmlns:ns1="http://www.w3.org/1999/xlink" width="509pt" height="27pt" viewBox="0.00 0.00 509.00 27.00">
<ns0:g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 23)">
<ns0:title>inheritancecba8d610dc</ns0:title>

<ns0:g id="node1" class="node">
<ns0:title>BaseExpression</ns0:title>
<ns0:g id="a_node1"><ns0:a ns1:href="../pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.BaseExpression" ns1:title="A ``BaseExpression`` is a base-class for all expressions." target="_top">
<ns0:polygon fill="white" stroke="#1e90ff" points="205,-19 111,-19 111,0 205,0 205,-19" />
<ns0:text text-anchor="middle" x="158" y="-7" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">BaseExpression</ns0:text>
</ns0:a>
</ns0:g>
</ns0:g>

<ns0:g id="node3" class="node">
<ns0:title>TernaryExpression</ns0:title>
<ns0:g id="a_node3"><ns0:a ns1:href="../pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.TernaryExpression" ns1:title="A ``TernaryExpression`` is a base-class for all ternary expressions." target="_top">
<ns0:polygon fill="white" stroke="#1e90ff" points="347,-19 241,-19 241,0 347,0 347,-19" />
<ns0:text text-anchor="middle" x="294" y="-7" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">TernaryExpression</ns0:text>
</ns0:a>
</ns0:g>
</ns0:g>

<ns0:g id="edge2" class="edge">
<ns0:title>BaseExpression-&gt;TernaryExpression</ns0:title>
<ns0:path fill="none" stroke="black" stroke-width="0.5" d="M205.12,-9.5C215,-9.5 225.57,-9.5 235.82,-9.5" />
<ns0:polygon fill="black" stroke="black" stroke-width="0.5" points="235.82,-11.25 240.82,-9.5 235.82,-7.75 235.82,-11.25" />
</ns0:g>

<ns0:g id="node2" class="node">
<ns0:title>ModelEntity</ns0:title>
<ns0:g id="a_node2"><ns0:a ns1:href="../pyVHDLModel/pyVHDLModel.Base.html#pyVHDLModel.Base.ModelEntity" ns1:title="``ModelEntity`` is the base-class for all classes in the VHDL language model, except for mixin classes (see multiple" target="_top">
<ns0:polygon fill="white" stroke="#1e90ff" points="75,-19 0,-19 0,0 75,0 75,-19" />
<ns0:text text-anchor="middle" x="37.5" y="-7" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">ModelEntity</ns0:text>
</ns0:a>
</ns0:g>
</ns0:g>

<ns0:g id="edge1" class="edge">
<ns0:title>ModelEntity-&gt;BaseExpression</ns0:title>
<ns0:path fill="none" stroke="black" stroke-width="0.5" d="M75.02,-9.5C84.72,-9.5 95.38,-9.5 105.71,-9.5" />
<ns0:polygon fill="black" stroke="black" stroke-width="0.5" points="105.75,-11.25 110.75,-9.5 105.75,-7.75 105.75,-11.25" />
</ns0:g>

<ns0:g id="node4" class="node">
<ns0:title>WhenElseExpression</ns0:title>
<ns0:g id="a_node4"><ns0:a ns1:href="../pyVHDLModel/pyVHDLModel.Expression.html#pyVHDLModel.Expression.WhenElseExpression" ns1:title="WhenElseExpression" target="_top">
<ns0:polygon fill="white" stroke="#1e90ff" points="501,-19 383,-19 383,0 501,0 501,-19" />
<ns0:text text-anchor="middle" x="442" y="-7" font-family="Vera Sans, DejaVu Sans, Liberation Sans, Arial, Helvetica, sans" font-size="10.00">WhenElseExpression</ns0:text>
</ns0:a>
</ns0:g>
</ns0:g>

<ns0:g id="edge3" class="edge">
<ns0:title>TernaryExpression-&gt;WhenElseExpression</ns0:title>
<ns0:path fill="none" stroke="black" stroke-width="0.5" d="M347.3,-9.5C357.12,-9.5 367.49,-9.5 377.61,-9.5" />
<ns0:polygon fill="black" stroke="black" stroke-width="0.5" points="377.87,-11.25 382.87,-9.5 377.87,-7.75 377.87,-11.25" />
</ns0:g>
</ns0:g>
</ns0:svg>